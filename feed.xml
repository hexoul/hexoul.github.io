<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-03-17T08:03:23+09:00</updated><id>/feed.xml</id><title type="html">Hexoul</title><subtitle>The creative needs diverse points of view and insight.</subtitle><entry><title type="html">하드웨어 인터럽트와 소프트웨어 인터럽트</title><link href="/interrupt" rel="alternate" type="text/html" title="하드웨어 인터럽트와 소프트웨어 인터럽트" /><published>2022-03-17T00:00:00+09:00</published><updated>2022-03-17T00:00:00+09:00</updated><id>/interrupt</id><content type="html" xml:base="/interrupt">&lt;p&gt;인터럽트(interrupt)는 프로세서에 이벤트를 알려 현재 프로세서가 실행 중인 컨텍스트에서 벗어나 별도의 컨텍스트를 실행하는 것을 가능하게 한다.&lt;/p&gt;

&lt;p&gt;이 때 이벤트가 어디에서 발생했는지에 따라 하드웨어 인터럽트 또는 소프트웨어 인터럽트로 분류된다.&lt;/p&gt;

&lt;p&gt;하드웨어 인터럽트는 키보드, 마우스 또는 프린터와 같은 외부 하드웨어 장치로부터도 발생할 수 있지만 내부에도 존재한다. 대표적으로 하드웨어 타이머의 경우, CPU 내부에서 클락(clock)을 일정한 주기를 가지고 인터럽트로 발생시켜 동기화를 가능케 한다.&lt;/p&gt;

&lt;p&gt;소프트웨어 인터럽트는 시스템 콜을 통해서 의도적으로 발생시킬 수도 있지만, 의도하지 않았는데도 프로그램 실행 중에 발생할 수 있다. 예기치 않게 발생한 인터럽트는 트랩(trap) 또는 예외(exception)라 불린다. 한가지 예로 어떤 수를 0으로 나눌 때 발생하는 divide-by-zero가 있다.&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/인터럽트&quot;&gt;https://ko.wikipedia.org/wiki/인터럽트&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interrupt#Hardware_interrupts&quot;&gt;https://en.wikipedia.org/wiki/Interrupt#Hardware_interrupts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interrupt#Software_interrupts&quot;&gt;https://en.wikipedia.org/wiki/Interrupt#Software_interrupts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Seunggon Kim</name></author><category term="os" /><summary type="html">인터럽트(interrupt)는 프로세서에 이벤트를 알려 현재 프로세서가 실행 중인 컨텍스트에서 벗어나 별도의 컨텍스트를 실행하는 것을 가능하게 한다.</summary></entry><entry><title type="html">운영체제와 커널</title><link href="/os-n-kernel" rel="alternate" type="text/html" title="운영체제와 커널" /><published>2022-03-03T00:00:00+09:00</published><updated>2022-03-03T00:00:00+09:00</updated><id>/os-n-kernel</id><content type="html" xml:base="/os-n-kernel">&lt;p&gt;일반적으로 커널은 운영체제에서 핵심이 되는 부분이라고 정의된다. 핵심이란 무엇일까?&lt;/p&gt;

&lt;p&gt;핵심이라 분류하여 나누는 기준은 시스템 자체에 영향을 줄 수 있는 코드의 실행 여부이다. 즉, 보안 취약점이 될 가능성을 가진 코드로 해석할 수도 있다. 구체적으로 메모리와 하드웨어의 보호를 위한 실행 영역의 분리가 커널의 목적 중 하나이다.&lt;/p&gt;

&lt;p&gt;메모리 보호가 되지않을 경우 세그멘테이션 오류(segmentation fault), 메모리 침범 등 다양한 문제가 발생할 수 있다. 읽기 전용 메모리 영역에 쓰기를 시도한 경우, 하드웨어에 의해 인지되면 세그멘테이션 오류가 발생하지만 인지가 안됐을 때는 오염이 발생된 채로 프로그램이 계속 수행되어 더욱 심한 부작용을 야기할 수 있다. 가상 주소(virtual address) 를 채용한 운영체제에서는 프로세스 별로 페이지 테이블을 관리하여 원칙적으로는 다른 프로세스의 메모리 영역에 접근할 수 없으나, 취약점이 노출된 경우 임의로 메모리를 갈취하거나 수정할 수도 있게 된다. 따라서 보안을 위해 시스템 자체에 영향을 줄 수 있는 작업들은 커널이라는 분리된 공간에서 특별한 권한을 가지고 실행하도록 설계된다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;500&quot; src=&quot;assets/images/os-n-kernel-fig1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;메모리 보호를 위해 실제 실행 환경은 사용자 모드와 커널 모드로 구분된다. 커널 모드는 특권 모드(privileged mode) 라고도 한다. 사용자 애플리케이션이 기본적으로 사용자 모드로 실행되고, 애플리케이션에서 권한이 요구되는 커널의 기능이 필요할 때는 시스템 콜 인터페이스를 통해 실행을 요청함으로써 시스템 서비스를 받을 수 있다. 커널 영역은 격리되어 보호받기에 직접 실행할 수 없기 때문이다.
모드의 이름 때문에 커널은 커널 모드에서만 실행된다고 생각될 수 있지만 반드시 그렇지는 않다. 커널은 커널 모드로만 실행되는 것이 아니고, 사용자 모드도 사용자 애플리케이션만 실행하는 모드가 아니다. 커널 설계에 따라 달라진다는 것이 정확한 표현이다. 커널 코드를 커널 모드에서만 실행하는 운영체제도 있고, 커널 코드 중 일부를 사용자 모드로 실행하는 운영체제도 있다. 예를 들어 특정 커널에서 일부 디바이스 드라이버는 사용자 모드에서 실행된다.&lt;/p&gt;

&lt;p&gt;커널 설계는 운영체제의 수 만큼 다양하지만 운영체제에서 차지하는 커널의 비중이나 추상화 방법에 따라 분류하여 단일형 커널(monolithic kernel), 마이크로커널(microkernel), 하이브리드 커널(hybrid kernel), 엑소 커널(exokernel) 등으로 부른다. 단일형 커널의 경우 이름 그대로 운영체제의 모든 기능을 단일 메모리 공간 내에서 실행하는 구조로 커널이 운영체제의 100%를 차지한다. 반면 마이크로커널은 커널의 크기를 최소화한 커널이다. 하이브리드 커널은 단일형 커널과 마이크로커널의 장점을 합치려고 시도한 커널이다.&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/운영_체제&quot;&gt;https://ko.wikipedia.org/wiki/운영_체제&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Operating_system&quot;&gt;https://en.wikipedia.org/wiki/Operating_system&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel_(operating_system)&quot;&gt;https://en.wikipedia.org/wiki/Kernel_(operating_system)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Seunggon Kim</name></author><category term="os" /><summary type="html">일반적으로 커널은 운영체제에서 핵심이 되는 부분이라고 정의된다. 핵심이란 무엇일까?</summary></entry></feed>